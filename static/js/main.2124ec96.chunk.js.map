{"version":3,"sources":["../../lib/dist/index.js","logo.svg","../../lib/dist/generate-ng.js","../../lib/dist/utils.js","../../lib/dist/is-acyclic-graph.js","../../lib/dist/nested-graph.js","compound-graph-page/utils/geometry.ts","compound-graph-page/utils/layout-utils.ts","compound-graph-page/draw-compound-graph/DrawCompoundGraph.tsx","compound-graph-page/graph-config-form/GraphConfigForm.tsx","compound-graph-page/utils/nested-graph.ts","compound-graph-page/CompoundGraphPage.tsx","compound-graph-page/utils/general.ts","App.tsx","index.tsx"],"names":["Object","defineProperty","exports","value","generateNestedGraph","generate_ng_1","require","opts","nestedGraph","generateNG","nodes","getAllNodes","links","getAllLinks","module","__assign","this","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","utils_1","is_acyclic_graph_1","nested_graph_1","defaultGraphConfig","undefined","nodeCount","Error","nestedNessRatio","outBoundLinkRatio","NestedGraph","Array","fill","map","_","id","toString","_loop_1","node","eventHappened","otherNodes","filter","isAncestor","updateNode","parentId","randomNumber","_i","_a","_b","_c","_d","connectableNodes_1","getAllNodesFromOtherSubTrees","connectable","loopsAllowed","isAcyclicGraph","concat","sourceId","targetId","push","setLinks","generateNGHelper","max","Math","floor","random","probability","sourceToTargetsMap","reduce","acc","nodesWithoutOutgoingLink","keys","l","cur","forEach","c","newLinks","state_1","nodesMap","setNodes","_this","nodeId","findNode","k","candidateNodeId","findRootNode","getAllNodesInSubGraph","rootNodeId","rootNode","nodeIdsSetFromSubTree_1","linearLinePathGenerator","line","x","d","y","curve","curveLinear","getRectangleLinkPoints","rect","width","height","distanceBetweenPoint","pointA","pointB","sqrt","linkBetweenTwoRectangle","rectA","rectB","rectALinkPoints","rectBLinkPoints","allPossibleLinks","ra","rb","sort","a","b","shiftPoint","point","dx","dy","buildLayout","subLayouts","layout","contains","graph","graphlib","Graph","setGraph","compound","setDefaultEdgeLabel","setNode","size","some","setEdge","setParent","position","edges","e","v","w","points","edge","buildGraphLayout","element","getLinksConnectingNodes","marginx","marginy","newPosition","find","translateLayoutNode","layoutNode","children","getAllNodesFromNodeTree","graphLayout","nodeQueue","getAllLinksFromNodeTree","generateMissingLinks","allLinksGenerated","allLayoutNodesMap","gl","sourceNode","targetNode","generateGraphLayout","getAllRootNodes","layoutSubGraph","childrenNodes","getAllChildrenNodes","childrenNodeLayout","GraphLink","link","arrowCircleColor","className","stroke","strokeWidth","cx","cy","r","memo","allNodes","allLinks","xmlns","viewBox","style","key","fillOpacity","strokeOpacity","name","GraphConfigForm","config","onSubmit","onChange","preventDefault","htmlFor","type","checked","min","step","target","Map","set","get","from","values","nodeIds","nodeIdSet","Set","has","generateRandomGraph","initialConfig","round","initialGraphData","CompoundGraphPage","useState","setConfig","setGraphData","src","displayDataTypes","displayObjectSize","App","href","alt","logo","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.2124ec96.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateNestedGraph = void 0;\nvar generate_ng_1 = require(\"./generate-ng\");\nfunction generateNestedGraph(opts) {\n    var nestedGraph = generate_ng_1.generateNG(opts || {});\n    return {\n        nodes: nestedGraph.getAllNodes(),\n        links: nestedGraph.getAllLinks()\n    };\n}\nexports.generateNestedGraph = generateNestedGraph;\n","module.exports = __webpack_public_path__ + \"static/media/logo.e385133d.svg\";","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateNG = void 0;\nvar utils_1 = require(\"./utils\");\nvar is_acyclic_graph_1 = require(\"./is-acyclic-graph\");\nvar nested_graph_1 = require(\"./nested-graph\");\nfunction generateNGHelper(opts) {\n    var nestedGraph = new nested_graph_1.NestedGraph(new Array(opts.nodeCount).fill(null).map(function (_, i) { return ({\n        id: i.toString()\n    }); }));\n    var _loop_1 = function (node) {\n        if (utils_1.eventHappened(opts.nestedNessRatio)) {\n            var otherNodes = nestedGraph\n                .getAllNodes()\n                .filter(function (n) { return n.id !== node.id && !nestedGraph.isAncestor(n.id, node.id); });\n            if (otherNodes.length > 0) {\n                nestedGraph.updateNode(node.id, __assign(__assign({}, node), { parentId: otherNodes[utils_1.randomNumber(otherNodes.length - 1)].id }));\n            }\n        }\n    };\n    // assign parents to each node based on nestedNessRatio\n    for (var _i = 0, _a = nestedGraph.getAllNodes(); _i < _a.length; _i++) {\n        var node = _a[_i];\n        _loop_1(node);\n    }\n    // generate links between nodes based on outBoundLinkRatio\n    var links = [];\n    for (var _b = 0, _c = nestedGraph.getAllNodes(); _b < _c.length; _b++) {\n        var node = _c[_b];\n        var connectableNodes = nestedGraph.getAllNodesFromOtherSubTrees(node.id);\n        for (var _d = 0, connectableNodes_1 = connectableNodes; _d < connectableNodes_1.length; _d++) {\n            var connectable = connectableNodes_1[_d];\n            if (utils_1.eventHappened(opts.outBoundLinkRatio) &&\n                (opts.loopsAllowed ||\n                    is_acyclic_graph_1.isAcyclicGraph(links.concat([{ sourceId: node.id, targetId: connectable.id }])))) {\n                links.push({ sourceId: node.id, targetId: connectable.id });\n            }\n        }\n    }\n    nestedGraph.setLinks(links);\n    return nestedGraph;\n}\nvar defaultGraphConfig = {\n    nodeCount: 10,\n    nestedNessRatio: 0.1,\n    outBoundLinkRatio: 0.1,\n    loopsAllowed: false\n};\nfunction generateNG(opts) {\n    if (opts) {\n        if (opts.nodeCount !== undefined && opts.nodeCount <= 0) {\n            throw new Error('nodeCount must be greater than zero');\n        }\n        if (opts.nestedNessRatio !== undefined &&\n            !(opts.nestedNessRatio >= 0 && opts.nestedNessRatio <= 1.0)) {\n            throw new Error('nestedNessRatio must be in the range [0, 1.0]');\n        }\n        if (opts.outBoundLinkRatio !== undefined &&\n            !(opts.outBoundLinkRatio >= 0 && opts.outBoundLinkRatio <= 1.0)) {\n            throw new Error('outBoundLinkRatio must be in the range [0, 1.0]');\n        }\n    }\n    return generateNGHelper({\n        nodeCount: opts.nodeCount !== undefined\n            ? opts.nodeCount\n            : defaultGraphConfig.nodeCount,\n        nestedNessRatio: opts.nestedNessRatio !== undefined\n            ? opts.nestedNessRatio\n            : defaultGraphConfig.nestedNessRatio,\n        outBoundLinkRatio: opts.outBoundLinkRatio !== undefined\n            ? opts.outBoundLinkRatio\n            : defaultGraphConfig.outBoundLinkRatio,\n        loopsAllowed: opts.loopsAllowed !== undefined\n            ? opts.loopsAllowed\n            : defaultGraphConfig.loopsAllowed\n    });\n}\nexports.generateNG = generateNG;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eventHappened = exports.randomNumber = void 0;\nfunction randomNumber(max) {\n    return Math.floor(Math.random() * max);\n}\nexports.randomNumber = randomNumber;\nfunction eventHappened(probability) {\n    return Math.random() >= 1 - probability;\n}\nexports.eventHappened = eventHappened;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAcyclicGraph = void 0;\nfunction isAcyclicGraph(links) {\n    var _loop_1 = function () {\n        var sourceToTargetsMap = links.reduce(function (acc, _a) {\n            var sourceId = _a.sourceId, targetId = _a.targetId;\n            acc[sourceId] = acc[sourceId] || [];\n            acc[sourceId].push(targetId);\n            return acc;\n        }, {});\n        var allNodes = Object.keys(links\n            .map(function (l) { return [l.sourceId, l.targetId]; })\n            .reduce(function (acc, cur) {\n            cur.forEach(function (c) { return (acc[c] = true); });\n            return acc;\n        }, {}));\n        var nodesWithoutOutgoingLink = allNodes\n            .filter(function (n) { return !(sourceToTargetsMap[n] && sourceToTargetsMap[n].length > 0); })\n            .reduce(function (acc, cur) {\n            acc[cur] = true;\n            return acc;\n        }, {});\n        var newLinks = links.filter(function (l) { return !nodesWithoutOutgoingLink[l.targetId]; });\n        if (newLinks.length === links.length) {\n            return { value: false };\n        }\n        links = newLinks;\n    };\n    while (links.length > 0) {\n        var state_1 = _loop_1();\n        if (typeof state_1 === \"object\")\n            return state_1.value;\n    }\n    return true;\n}\nexports.isAcyclicGraph = isAcyclicGraph;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NestedGraph = void 0;\nvar NestedGraph = /** @class */ (function () {\n    function NestedGraph(nodes, links) {\n        if (nodes === void 0) { nodes = []; }\n        if (links === void 0) { links = []; }\n        this.nodesMap = {};\n        this.setNodes(nodes);\n        this.links = links;\n    }\n    NestedGraph.prototype.setNodes = function (nodes) {\n        var _this = this;\n        this.nodesMap = {};\n        nodes.forEach(function (n) { return (_this.nodesMap[n.id] = n); });\n    };\n    NestedGraph.prototype.updateNode = function (nodeId, node) {\n        this.nodesMap[nodeId] = node;\n    };\n    NestedGraph.prototype.setLinks = function (links) {\n        this.links = links;\n    };\n    NestedGraph.prototype.findNode = function (nodeId) {\n        return this.nodesMap[nodeId];\n    };\n    NestedGraph.prototype.getAllNodes = function () {\n        var _this = this;\n        return Object.keys(this.nodesMap).map(function (k) { return _this.nodesMap[k]; });\n    };\n    NestedGraph.prototype.getAllLinks = function () {\n        return this.links;\n    };\n    NestedGraph.prototype.isAncestor = function (nodeId, candidateNodeId) {\n        var node = this.findNode(nodeId);\n        return node && node.parentId !== undefined\n            ? node.parentId === candidateNodeId ||\n                this.isAncestor(node.parentId, candidateNodeId)\n            : false;\n    };\n    NestedGraph.prototype.findRootNode = function (nodeId) {\n        var node = this.findNode(nodeId);\n        if (node) {\n            if (node.parentId) {\n                this.findRootNode(node.parentId);\n            }\n            else {\n                return node;\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    NestedGraph.prototype.getAllNodesInSubGraph = function (rootNodeId) {\n        var _this = this;\n        var rootNode = this.findNode(rootNodeId);\n        return rootNode\n            ? this.getAllNodes()\n                .filter(function (n) { return _this.isAncestor(n.id, rootNodeId); })\n                .concat([rootNode])\n            : [];\n    };\n    NestedGraph.prototype.getAllNodesFromOtherSubTrees = function (nodeId) {\n        var rootNode = this.findRootNode(nodeId);\n        if (rootNode) {\n            var nodeIdsSetFromSubTree_1 = this.getAllNodesInSubGraph(rootNode.id)\n                .map(function (n) { return n.id; })\n                .reduce(function (acc, cur) {\n                acc[cur] = true;\n                return acc;\n            }, {});\n            return this.getAllNodes().filter(function (n) { return !nodeIdsSetFromSubTree_1[n.id]; });\n        }\n        else {\n            return [];\n        }\n    };\n    return NestedGraph;\n}());\nexports.NestedGraph = NestedGraph;\n","import { curveLinear, line } from 'd3-shape';\nimport { graphlib, layout } from 'dagre';\nimport { Point, Rectangle, Size } from '../types';\n\nexport const linearLinePathGenerator = line<Point>()\n  .x((d) => d.x)\n  .y((d) => d.y)\n  .curve(curveLinear);\n\nfunction translateOriginFromCenterToTopLeft(point: Point, size: Size): Point {\n  return {\n    x: point.x - size.width / 2,\n    y: point.y - size.height / 2\n  };\n}\n\nfunction getRectangleLinkPoints(rect: Rectangle): Point[] {\n  return [\n    {\n      x: rect.x,\n      y: rect.y\n    },\n    {\n      x: rect.x + rect.width / 2,\n      y: rect.y\n    },\n    {\n      x: rect.x + rect.width,\n      y: rect.y\n    },\n    {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height / 2\n    },\n    {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    },\n    {\n      x: rect.x + rect.width / 2,\n      y: rect.y + rect.height\n    },\n    {\n      x: rect.x,\n      y: rect.y + rect.height\n    },\n    {\n      x: rect.x,\n      y: rect.y + rect.height / 2\n    }\n  ];\n}\n\nfunction distanceBetweenPoint(pointA: Point, pointB: Point) {\n  return Math.sqrt(\n    (pointA.x - pointB.x) * (pointA.x - pointB.x) +\n      (pointA.y - pointB.y) * (pointA.y - pointB.y)\n  );\n}\n\nexport function linkBetweenTwoRectangle(\n  rectA: Rectangle,\n  rectB: Rectangle\n): Point[] {\n  const rectALinkPoints = getRectangleLinkPoints(rectA);\n  const rectBLinkPoints = getRectangleLinkPoints(rectB);\n  const allPossibleLinks = rectALinkPoints\n    .map((ra) => rectBLinkPoints.map((rb) => [ra, rb]))\n    .reduce((acc, cur) => acc.concat(cur), []);\n  allPossibleLinks.sort(\n    (a, b) =>\n      distanceBetweenPoint(a[0], a[1]) - distanceBetweenPoint(b[0], b[1])\n  );\n  return allPossibleLinks[0];\n}\n\nexport function shiftPoint(point: Point, dx: number, dy: number): Point {\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nexport function buildGraphLayout(\n  nodes: Array<{ id: string; size: { width: number; height: number } }>,\n  links: Array<{ sourceId: string; targetId: string }>,\n  contains: Array<{ id: string; parentId: string }>,\n  opts?: {\n    marginx: number;\n    marginy: number;\n  }\n): {\n  nodes: Array<{\n    id: string;\n    size: { width: number; height: number };\n    position: { x: number; y: number };\n  }>;\n  links: Array<{\n    sourceId: string;\n    targetId: string;\n    points: Array<{ x: number; y: number }>;\n  }>;\n  size: {\n    width: number;\n    height: number;\n  };\n} {\n  const graph = new graphlib.Graph();\n  graph.setGraph({ ...opts, compound: contains.length > 0 });\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n  nodes.forEach((n) => graph.setNode(n.id.toString(), n.size));\n  links\n    .filter(\n      (l) =>\n        /*\n        dagre cannot layout when a group node has an outgoing or incoming link.\n        Issue - https://github.com/dagrejs/dagre-d3/issues/319\n      */\n        !contains.some(\n          (c) => c.parentId === l.sourceId || c.parentId === l.targetId\n        )\n    )\n    .forEach((l) => graph.setEdge(l.sourceId, l.targetId));\n  contains.forEach((c) => graph.setParent(c.id, c.parentId));\n  layout(graph);\n  return {\n    nodes: graph.nodes().map((nodeId) => {\n      const n = graph.node(nodeId);\n      return {\n        id: nodeId,\n        size: {\n          width: n.width,\n          height: n.height\n        },\n        position: translateOriginFromCenterToTopLeft(n, n)\n      };\n    }),\n    links: graph.edges().map((e) => ({\n      sourceId: e.v,\n      targetId: e.w,\n      points: graph.edge(e).points\n    })),\n    size: {\n      width: graph.graph().width || 0,\n      height: graph.graph().height || 0\n    }\n  };\n}\n","import { GraphLayout, LayoutLink, LayoutNode, Point } from '../types';\nimport {\n  buildGraphLayout,\n  linkBetweenTwoRectangle,\n  shiftPoint\n} from './geometry';\nimport { GraphLink, GraphNode, NestedGraph } from './nested-graph';\n\nfunction translateLayoutNode(\n  layoutNode: LayoutNode,\n  dx: number,\n  dy: number\n): LayoutNode {\n  return {\n    ...layoutNode,\n    position: shiftPoint(layoutNode.position, dx, dy),\n    links: layoutNode.links.map((l) => ({\n      ...l,\n      points: l.points.map((p) => shiftPoint(p, dx, dy))\n    })),\n    children: layoutNode.children.map((c) => translateLayoutNode(c, dx, dy))\n  };\n}\n\nfunction buildLayout(\n  nestedGraph: NestedGraph,\n  subLayouts: LayoutNode[]\n): GraphLayout {\n  const layout = buildGraphLayout(\n    subLayouts.map(({ element, size }) => ({\n      id: element.id,\n      size\n    })),\n    nestedGraph.getLinksConnectingNodes(subLayouts.map((l) => l.element.id)),\n    [],\n    {\n      marginx: 45,\n      marginy: 45\n    }\n  );\n\n  /* Patch position for each root node from layout */\n  const nodes = subLayouts.map((rootNode) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const newPosition = (layout.nodes.find(\n      (n) => n.id === rootNode.element.id\n    ) as any).position as Point;\n    return translateLayoutNode(\n      rootNode,\n      newPosition.x - rootNode.position.x,\n      newPosition.y - rootNode.position.y\n    );\n  });\n\n  return {\n    nodes,\n    links: layout.links.map((l) => ({\n      element: l,\n      points: l.points\n    })),\n    size: layout.size\n  };\n}\n\nfunction layoutSubGraph(\n  rootNode: GraphNode,\n  nestedGraph: NestedGraph\n): LayoutNode {\n  const childrenNodes = nestedGraph.getAllChildrenNodes(rootNode.id);\n  if (childrenNodes.length > 0) {\n    const childrenNodeLayout = childrenNodes.map((c) =>\n      layoutSubGraph(c, nestedGraph)\n    );\n\n    const { nodes, links, size } = buildLayout(nestedGraph, childrenNodeLayout);\n\n    return {\n      element: rootNode,\n      children: nodes,\n      size,\n      position: {\n        x: 0,\n        y: 0\n      },\n      links\n    };\n  } else {\n    return {\n      element: rootNode,\n      children: [],\n      size: {\n        width: 400,\n        height: 150\n      },\n      position: {\n        x: 0,\n        y: 0\n      },\n      links: []\n    };\n  }\n}\n\nexport function getAllNodesFromNodeTree(\n  graphLayout: GraphLayout\n): LayoutNode[] {\n  let nodeQueue = graphLayout.nodes;\n  let nodes: LayoutNode[] = [];\n  while (nodeQueue.length > 0) {\n    nodes = nodes.concat(nodeQueue);\n    nodeQueue = nodeQueue\n      .map((n) => n.children)\n      .reduce((acc, cur) => acc.concat(cur), []);\n  }\n  return nodes;\n}\n\nexport function getAllLinksFromNodeTree(\n  graphLayout: GraphLayout\n): LayoutLink[] {\n  let links: LayoutLink[] = graphLayout.links;\n  let nodeQueue = graphLayout.nodes;\n  while (nodeQueue.length > 0) {\n    links = links.concat(\n      nodeQueue.map((n) => n.links).reduce((acc, cur) => acc.concat(cur), [])\n    );\n    nodeQueue = nodeQueue\n      .map((n) => n.children)\n      .reduce((acc, cur) => acc.concat(cur), []);\n  }\n  return links;\n}\n\nfunction generateLinkBetweenLayoutNode(\n  sourceNode: LayoutNode,\n  targetNode: LayoutNode,\n  link: GraphLink\n): LayoutLink {\n  return {\n    element: link,\n    points: linkBetweenTwoRectangle(\n      { ...sourceNode.size, ...sourceNode.position },\n      { ...targetNode.size, ...targetNode.position }\n    )\n  };\n}\n\n/**\n * current layouting algorithm does not generate links which connect from one sub graph node to\n * another sub graph node.\n * This is solved by generating missing links at the end of layout.\n */\nfunction generateMissingLinks(\n  graphLayout: GraphLayout,\n  nestedGraph: NestedGraph\n): LayoutLink[] {\n  const allLinksGenerated = getAllLinksFromNodeTree(graphLayout);\n  const allLayoutNodesMap = getAllNodesFromNodeTree(graphLayout).reduce(\n    (map, cur) => {\n      map[cur.element.id] = cur;\n      return map;\n    },\n    {} as { [key: string]: LayoutNode }\n  );\n  return nestedGraph\n    .getAllLinks()\n    .filter(\n      (l) =>\n        !allLinksGenerated.some(\n          (gl) =>\n            gl.element.sourceId === l.sourceId &&\n            gl.element.targetId === l.targetId\n        )\n    )\n    .map((l) =>\n      generateLinkBetweenLayoutNode(\n        allLayoutNodesMap[l.sourceId],\n        allLayoutNodesMap[l.targetId],\n        l\n      )\n    );\n}\n\n/**\n * generates layout properties for all the nodes(width, height, x and y) and\n * links(Array<{x, y}>) for a given abstract graph.\n * @param nestedGraph\n */\nexport function generateGraphLayout(nestedGraph: NestedGraph): GraphLayout {\n  const graphLayout = buildLayout(\n    nestedGraph,\n    nestedGraph\n      .getAllRootNodes()\n      .map((rootNode) => layoutSubGraph(rootNode, nestedGraph))\n  );\n  return {\n    ...graphLayout,\n    links: graphLayout.links.concat(\n      generateMissingLinks(graphLayout, nestedGraph)\n    )\n  };\n}\n","import React, { memo } from 'react';\nimport { GraphLayout, LayoutLink } from '../types';\nimport { linearLinePathGenerator } from '../utils/geometry';\nimport {\n  getAllLinksFromNodeTree,\n  getAllNodesFromNodeTree\n} from '../utils/layout-utils';\n\nconst GraphLink: React.SFC<{ link: LayoutLink }> = ({ link }) => {\n  const arrowCircleColor = 'hsl(' + Math.random() * 360 + ',80%,48%)';\n  return (\n    <g\n      className={`link link-source=${link.element.sourceId} link-target=${link.element.targetId}`}\n    >\n      <path\n        stroke=\"grey\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        d={linearLinePathGenerator(link.points) || undefined}\n      />\n      <circle\n        fill={arrowCircleColor}\n        cx={link.points[link.points.length - 1].x}\n        cy={link.points[link.points.length - 1].y}\n        r={12}\n      />\n      <circle\n        fill={arrowCircleColor}\n        cx={link.points[0].x}\n        cy={link.points[0].y}\n        r={8}\n      />\n    </g>\n  );\n};\n\nconst DrawCompoundGraph: React.SFC<{\n  layout: GraphLayout;\n}> = ({ layout }) => {\n  const allNodes = getAllNodesFromNodeTree(layout);\n  const allLinks = getAllLinksFromNodeTree(layout);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={`0 0 ${layout.size.width} ${layout.size.height}`}\n      style={{\n        width: '100%',\n        height: '100%'\n      }}\n    >\n      {allNodes.map((n) => (\n        <g key={n.element.id} className={`node ${n.element.id}`}>\n          <rect\n            x={n.position.x}\n            y={n.position.y}\n            width={n.size.width}\n            height={n.size.height}\n            style={{\n              stroke: 'black',\n              fillOpacity: 0,\n              strokeWidth: 5,\n              strokeOpacity: 1\n            }}\n          />\n          <text x={n.position.x + 30} y={n.position.y + 30}>\n            {`${n.element.name} (${n.position.x}, ${n.position.y})`}\n          </text>\n        </g>\n      ))}\n      {allLinks.map((l) => (\n        <GraphLink\n          link={l}\n          key={`${l.element.sourceId}-${l.element.targetId}`}\n        />\n      ))}\n    </svg>\n  );\n};\n\nexport default memo(DrawCompoundGraph);\n","import React from 'react';\nimport { GraphConfig } from '../types';\nimport './GraphConfigForm.css';\n\nconst GraphConfigForm: React.SFC<{\n  config: GraphConfig;\n  onSubmit: (config: GraphConfig) => void;\n  onChange: (config: GraphConfig) => void;\n}> = ({ config, onSubmit, onChange }) => {\n  const {\n    loopsAllowed,\n    nestedNessRatio,\n    outBoundLinkRatio,\n    nodeCount\n  } = config;\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(config);\n  };\n  const loopsAllowedChange = () =>\n    onChange({ ...config, loopsAllowed: !config.loopsAllowed });\n  const outBoundLinkRatioChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    onChange({ ...config, outBoundLinkRatio: +e.target.value });\n  const nestedNessRatioChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    onChange({ ...config, nestedNessRatio: +e.target.value });\n  const nodeCountChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    onChange({ ...config, nodeCount: +e.target.value });\n\n  return (\n    <form className=\"graph-config-form\" onSubmit={onFormSubmit}>\n      <label htmlFor=\"loopsAllowed\">\n        <span>Loops Allowed</span>\n        <input\n          id=\"loopsAllowed\"\n          type=\"checkbox\"\n          checked={loopsAllowed}\n          onChange={loopsAllowedChange}\n        />\n      </label>\n      <label htmlFor=\"nodeCount\">\n        <span>Node Count</span>\n        <input\n          id=\"nodeCount\"\n          type=\"number\"\n          min=\"1\"\n          max=\"100\"\n          step=\"1\"\n          value={nodeCount}\n          onChange={nodeCountChange}\n        />\n      </label>\n      <label htmlFor=\"nestedNessRatio\">\n        <span>Nestedness Ratio</span>\n        <input\n          id=\"nestedNessRatio\"\n          type=\"number\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={nestedNessRatio}\n          onChange={nestedNessRatioChange}\n        />\n      </label>\n      <label htmlFor=\"outBoundLinkRatio\">\n        <span>Outbound Links Ratio</span>\n        <input\n          id=\"outBoundLinkRatio\"\n          type=\"number\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={outBoundLinkRatio}\n          onChange={outBoundLinkRatioChange}\n        />\n      </label>\n      <button type=\"submit\">New Graph</button>\n    </form>\n  );\n};\n\nexport default GraphConfigForm;\n","export interface GraphNode {\n  name: string;\n  id: string;\n  parentId?: string;\n}\n\nexport interface GraphLink {\n  sourceId: string;\n  targetId: string;\n}\n\nexport class NestedGraph {\n  private nodesMap: Map<string, GraphNode>;\n  private links: GraphLink[];\n\n  constructor(nodes: GraphNode[] = [], links: GraphLink[] = []) {\n    this.nodesMap = new Map();\n    this.setNodes(nodes);\n    this.links = links;\n  }\n\n  public setNodes(nodes: GraphNode[]) {\n    this.nodesMap = new Map();\n    nodes.forEach((n) => this.nodesMap.set(n.id, n));\n  }\n\n  public updateNode(nodeId: string, node: GraphNode) {\n    this.nodesMap.set(nodeId, node);\n  }\n\n  public setLinks(links: GraphLink[]) {\n    this.links = links;\n  }\n\n  public findNode(nodeId: string): GraphNode | undefined {\n    return this.nodesMap.get(nodeId);\n  }\n  public getAllNodes(): GraphNode[] {\n    return Array.from(this.nodesMap.values());\n  }\n\n  public getAllRootNodes(): Array<GraphNode> {\n    return this.getAllNodes().filter((n) => n.parentId === undefined);\n  }\n\n  public getAllLinks(): GraphLink[] {\n    return this.links;\n  }\n\n  public getAllChildrenNodes(rootNodeId: string): GraphNode[] {\n    return this.getAllNodes().filter((n) => n.parentId === rootNodeId);\n  }\n\n  public getLinksConnectingNodes(nodeIds: string[]): GraphLink[] {\n    const nodeIdSet = new Set(nodeIds);\n    return this.getAllLinks().filter(\n      (l) => nodeIdSet.has(l.sourceId) && nodeIdSet.has(l.targetId)\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport './CompoundGraphPage.css';\nimport { DrawCompoundGraph } from './draw-compound-graph';\nimport { GraphConfigForm } from './graph-config-form';\nimport { GraphConfig, GraphLayout } from './types';\nimport { getRandomArbitraryInt } from './utils/general';\nimport { generateNestedGraph } from 'nested-graph-generator';\nimport { generateGraphLayout } from './utils/layout-utils';\nimport { NestedGraph } from './utils/nested-graph';\nimport ReactJson from 'react-json-view';\n\nfunction generateRandomGraph(config: GraphConfig) {\n  const graph = generateNestedGraph(config);\n  const layout = generateGraphLayout(\n    new NestedGraph(\n      graph.nodes.map((n, i) => ({ ...n, name: `Graph-Node ${i}` })),\n      graph.links\n    )\n  );\n  return {\n    graph,\n    layout\n  };\n}\n\nconst initialConfig: GraphConfig = {\n  loopsAllowed: false,\n  nodeCount: getRandomArbitraryInt(5, 10),\n  nestedNessRatio: 0.2,\n  outBoundLinkRatio: 0.3\n};\n\nconst initialGraphData = generateRandomGraph(initialConfig);\n\nconst CompoundGraphPage: React.FC = () => {\n  const [config, setConfig] = useState<GraphConfig>(initialConfig);\n  const [{ graph, layout }, setGraphData] = useState<{\n    graph: any;\n    layout: GraphLayout;\n  }>(initialGraphData);\n\n  const onGenerateFromConfigSubmit = () =>\n    setGraphData(generateRandomGraph(config));\n\n  return (\n    <div className=\"compound-graph-page\">\n      <div className=\"compound-graph-page__info\">\n        <div className=\"compound-graph-page__params__section\">\n          <h4 className=\"compound-graph-page__params__section__header\">\n            Configuration\n          </h4>\n          <div className=\"compound-graph-page__params__section__body\">\n            <GraphConfigForm\n              config={config}\n              onChange={setConfig}\n              onSubmit={onGenerateFromConfigSubmit}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"compound-graph-page__json\">\n        <ReactJson\n          src={graph}\n          name={null}\n          displayDataTypes={false}\n          displayObjectSize={false}\n        />\n      </div>\n      <div className=\"compound-graph-page__draw-area\">\n        <DrawCompoundGraph layout={layout} />\n      </div>\n    </div>\n  );\n};\n\nexport default CompoundGraphPage;\n","/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nexport function getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (exclusive)\n */\nexport function getRandomArbitraryInt(min: number, max: number) {\n  return Math.round(Math.random() * (max - min) + min);\n}\n","import React from 'react';\nimport './App.css';\nimport { CompoundGraphPage } from './compound-graph-page';\nimport logo from './logo.svg';\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <header className=\"header\">\n        <a className=\"app-name\" href=\"/\">\n          <img alt=\"Logo\" src={logo} />\n          Nested Graph Generator\n        </a>\n      </header>\n      <div className=\"content\">\n        <CompoundGraphPage />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nrender(<App />, rootElement);\n"],"sourceRoot":""}